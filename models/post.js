// Generated by CoffeeScript 1.7.1
(function() {
  var Post, markdown, mongodb, settings;

  settings = require('../settings');

  mongodb = require('mongodb').Db;

  markdown = require('markdown').markdown;

  Post = (function() {
    function Post(post) {
      this.name = post.name, this.title = post.title, this.post = post.post, this.tags = post.tags, this.avatar = post.avatar;
    }


    /* 读取 */

    Post.getOne = function(name, day, title, callback) {
      return mongodb.connect(settings.url, function(err, db) {
        if (err) {
          callback(err);
        }
        return db.collection('posts', function(err, collection) {
          if (err) {
            db.close();
            return callback(err);
          }
          return collection.findOne({
            name: name,
            title: title,
            time: +day
          }, function(err, doc) {
            var i, _fn, _i, _len, _ref;
            if (err) {
              db.close();
              return callback(err);
            }
            if (doc) {
              collection.update({
                name: name,
                title: title,
                time: +day
              }, {
                $inc: {
                  pv: 1
                }
              }, function(err) {
                db.close();
                if (err) {
                  return callback(err);
                }
              });
            }
            doc.post = markdown.toHTML(doc.post);
            _ref = doc.comments;
            _fn = function() {
              return i.content = markdown.toHTML(i.content);
            };
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              i = _ref[_i];
              _fn();
            }
            doc.comments.sort(function(v) {
              return v.time;
            });
            return callback(null, doc);
          });
        });
      });
    };


    /* 读取存档 */

    Post.getArchive = function(callback) {
      return mongodb.connect(settings.url, function(err, db) {
        if (err) {
          callback(err);
        }
        return db.collection('posts', function(err, collection) {
          if (err) {
            db.close();
            return callback(err);
          }
          return collection.find({}, {
            name: 1,
            title: 1,
            time: 1
          }).sort({
            time: -1
          }).toArray(function(err, doc) {
            db.close();
            if (err) {
              return callback(err);
            }
            return callback(null, doc);
          });
        });
      });
    };


    /* 读取标签 */

    Post.getTags = function(callback) {
      return mongodb.connect(settings.url, function(err, db) {
        if (err) {
          callback(err);
        }
        return db.collection('posts', function(err, collection) {
          if (err) {
            db.close();
            return callback(err);
          }
          return collection.distinct('tags', function(err, docs) {
            db.close();
            if (err) {
              return callback(err);
            }
            return callback(null, docs);
          });
        });
      });
    };


    /* 读取具体标签 */

    Post.getTag = function(tag, callback) {
      return mongodb.connect(settings.url, function(err, db) {
        if (err) {
          callback(err);
        }
        return db.collection('posts', function(err, collection) {
          if (err) {
            db.close();
            return callback(err);
          }
          return collection.find({
            tags: new RegExp(tag)
          }, {
            name: 1,
            title: 1,
            time: 1
          }).sort({
            time: -1
          }).toArray(function(err, docs) {
            db.close();
            if (err) {
              return callback(err);
            }
            return callback(null, docs);
          });
        });
      });
    };


    /* 编辑 */

    Post.edit = function(name, day, title, callback) {
      return mongodb.connect(settings.url, function(err, db) {
        if (err) {
          callback(err);
        }
        return db.collection('posts', function(err, collection) {
          if (err) {
            db.close();
            return callback(err);
          }
          return collection.findOne({
            name: name,
            title: title,
            time: +day
          }, function(err, doc) {
            db.close();
            if (err) {
              return callback(err);
            }
            return callback(null, doc);
          });
        });
      });
    };


    /* 更新 */

    Post.update = function(name, day, title, post, tags, callback) {
      return mongodb.connect(settings.url, function(err, db) {
        if (err) {
          callback(err);
        }
        return db.collection('posts', function(err, collection) {
          if (err) {
            db.close();
            return callback(err);
          }
          return collection.update({
            name: name,
            title: title,
            time: +day
          }, {
            $set: {
              post: post,
              tags: tags
            }
          }, function(err) {
            db.close();
            if (err) {
              return callback(err);
            }
            return callback(null);
          });
        });
      });
    };


    /* 删除 */

    Post.remove = function(name, day, title, callback) {
      return mongodb.connect(settings.url, function(err, db) {
        if (err) {
          callback(err);
        }
        return db.collection('posts', function(err, collection) {
          if (err) {
            db.close();
            return callback(err);
          }
          return collection.remove({
            name: name,
            title: title,
            time: +day
          }, {
            w: 1
          }, function(err) {
            db.close();
            if (err) {
              return callback(err);
            }
            return callback(null);
          });
        });
      });
    };


    /* 分页读取 */

    Post.getPage = function(name, page, callback) {
      return mongodb.connect(settings.url, function(err, db) {
        if (err) {
          callback(err);
        }
        return db.collection('posts', function(err, collection) {
          var query;
          if (err) {
            db.close();
            return callback(err);
          }
          query = {};
          if (name) {
            query.name = name;
          }
          return collection.count(query, function(err, total) {
            return collection.find(query, {
              skip: (page - 1) * 6,
              limit: 6
            }).sort({
              time: -1
            }).toArray(function(err, docs) {
              var i, _fn, _i, _len;
              db.close();
              if (err) {
                return callback(err);
              }
              _fn = function(i) {
                return i.post = markdown.toHTML(i.post);
              };
              for (_i = 0, _len = docs.length; _i < _len; _i++) {
                i = docs[_i];
                _fn(i);
              }
              return callback(null, docs, total);
            });
          });
        });
      });
    };


    /* 读取所有 */

    Post.getAll = function(name, callback) {
      return mongodb.connect(settings.url, function(err, db) {
        if (err) {
          callback(err);
        }
        return db.collection('posts', function(err, collection) {
          var query;
          if (err) {
            db.close();
            return callback(err);
          }
          query = {};
          if (name) {
            query.name = name;
          }
          return collection.find(query).sort({
            time: -1
          }).toArray(function(err, docs) {
            var i, _fn, _i, _len;
            db.close();
            if (err) {
              return callback(err);
            }
            _fn = function(i) {
              return i.post = markdown.toHTML(i.post);
            };
            for (_i = 0, _len = docs.length; _i < _len; _i++) {
              i = docs[_i];
              _fn(i);
            }
            return callback(null, docs);
          });
        });
      });
    };


    /* 搜索 */

    Post.search = function(keyword, callback) {
      return mongodb.connect(settings.url, function(err, db) {
        if (err) {
          callback(err);
        }
        return db.collection('posts', function(err, collection) {
          if (err) {
            db.close();
            return callback(err);
          }
          keyword = new RegExp(keyword, 'i');
          return collection.find({
            title: keyword
          }, {
            name: 1,
            time: 1,
            title: 1
          }).sort({
            time: -1
          }).toArray(function(err, docs) {
            db.close();
            if (err) {
              return callback(err);
            }
            return callback(null, docs);
          });
        });
      });
    };


    /* 保存 */

    Post.prototype.save = function(callback) {
      var post;
      post = {
        name: this.name,
        title: this.title,
        post: this.post,
        avatar: this.avatar,
        tags: this.tags,
        comments: [],
        pv: 0,
        time: Date.now()
      };
      return mongodb.connect(settings.url, function(err, db) {
        if (err) {
          return callback(err);
        }
        return db.collection('posts', function(err, collection) {
          if (err) {
            db.close();
            return callback(err);
          }
          return collection.insert(post, {
            safe: true
          }, function(err, post) {
            db.close();
            if (err) {
              return callback(err);
            }
            return callback(null, post[0]);
          });
        });
      });
    };

    return Post;

  })();

  module.exports = Post;

}).call(this);

//# sourceMappingURL=post.map
